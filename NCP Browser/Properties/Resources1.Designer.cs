//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NCP_Browser.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NCP_Browser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function handleClientPortRequest(a){console.log(&quot;Incoming new port:&quot;,a);var b=null,c=null,d=function(a){c=a},e=function(a){return c};if(!a.sender||!a.sender.id)throw{name:&quot;port missing id&quot;,port:a};var f=a.sender.id,g=&quot;&quot;;f===location.host?(a.sender.tab.url?b=a.sender.tab.url:a.sender.url?b=a.sender.url:console.log(&quot;FAILED determining origin for port&quot;),a.sender.tab.title?d(a.sender.tab.title):console.log(&quot;FAILED determining origin for port&quot;)):(g=&quot;Chrome&quot;,b=&quot;chrome-extension://&quot;+f+&quot;/&quot;,chrome.management.get(f,f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cwic_background {
            get {
                return ResourceManager.GetString("cwic_background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cwic_ext=function(){function d(){var a=typeof arguments[0]==&quot;boolean&quot;?arguments[0]:!1,b=typeof arguments[0]==&quot;string&quot;?arguments[0]:arguments[1],d=typeof arguments[1]==&quot;object&quot;?arguments[1]:arguments[2];if(!a||a&amp;&amp;c){var e=new Date,f=(&quot;0&quot;+e.getHours()).slice(-2)+&quot;:&quot;+(&quot;0&quot;+e.getMinutes()).slice(-2)+&quot;:&quot;+(&quot;0&quot;+e.getSeconds()).slice(-2)+&quot;.&quot;+(&quot;00&quot;+e.getMilliseconds()).slice(-3)+&quot; &quot;;d?console.log(&quot;[cwic.ext] &quot;+f+b,d):console.log(&quot;[cwic.ext] &quot;+f+b)}}var a=null,b=null,c=!1;cwic_reply=function(a){var c=&quot;unknown&quot;;a.cisco [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cwic_contentscript {
            get {
                return ResourceManager.GetString("cwic_contentscript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var cwic_plugin=function(){function c(){var a=typeof arguments[0]==&quot;boolean&quot;?arguments[0]:!1,c=typeof arguments[0]==&quot;string&quot;?arguments[0]:arguments[1],d=typeof arguments[1]==&quot;object&quot;?arguments[1]:arguments[2];if(!a||a&amp;&amp;b.verbose){var e=new Date,f=(&quot;0&quot;+e.getHours()).slice(-2)+&quot;:&quot;+(&quot;0&quot;+e.getMinutes()).slice(-2)+&quot;:&quot;+(&quot;0&quot;+e.getSeconds()).slice(-2)+&quot;.&quot;+(&quot;00&quot;+e.getMilliseconds()).slice(-3)+&quot; &quot;;d?console.log(&quot;[cwic.ext] &quot;+f+c,d):console.log(&quot;[cwic.ext] &quot;+f+c)}}var a=$.noop,b={};loadExtProps=function(){var a=new XM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cwic_plugin {
            get {
                return ResourceManager.GetString("cwic_plugin", resourceCulture);
            }
        }
    }
}
